# Generated by Django 2.0.3 on 2018-04-18 17:05

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Host',
            fields=[
                ('host_id', models.IntegerField(auto_created=True, help_text='网站id', primary_key=True, serialize=False, verbose_name='网站id')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
                ('host_name', models.CharField(max_length=255, verbose_name='网站名称')),
                ('applicant', models.CharField(max_length=255, verbose_name='申请检测单位')),
                ('host_domain', models.CharField(max_length=255, verbose_name='网站域名')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('page_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='网页id')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
                ('host_id', models.IntegerField(verbose_name='网站id')),
                ('local_dir', models.CharField(max_length=255, verbose_name='本地地址')),
                ('url', models.CharField(max_length=4096, verbose_name='url')),
                ('depth', models.IntegerField(verbose_name='网页所在层数')),
                ('title', models.CharField(max_length=255, verbose_name='网页标题')),
                ('encode', models.CharField(max_length=16, verbose_name='网页编码')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('rule_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False, verbose_name='检测规则id')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modify_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
                ('standard', models.CharField(max_length=200, verbose_name='标准')),
                ('rule_doc_id', models.CharField(max_length=50, verbose_name='规则编号')),
                ('title', models.CharField(max_length=100, verbose_name='规则名')),
                ('implemented', models.IntegerField(choices=[(0, '未实现'), (1, '已实现')], verbose_name='规则是否被实现')),
                ('level', models.IntegerField(verbose_name='等级')),
                ('type', models.IntegerField(choices=[(0, '未知'), (1, '自动检测'), (2, '半自动检测'), (3, '人工检测')], verbose_name='类型')),
                ('difficulty', models.IntegerField(verbose_name='难度等级')),
                ('description', models.TextField(verbose_name='规则说明')),
                ('check_method', models.TextField(verbose_name='检测方法说明')),
                ('pass_condition', models.TextField(verbose_name='通过条件说明')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
